!function(e){function n(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}var r={};n.m=e,n.c=r,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:t})},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)}([function(e,n,r){"use strict";function t(e,n,r,t){var o=(0,u.default)(e);if(o)return o in u?u[o](r,n,t):void console.warn("Unhandled op: "+o)}function o(e){for(var n=[].concat(function(e){if(Array.isArray(e)){for(var n=0,r=Array(e.length);n<e.length;n++)r[n]=e[n];return r}return Array.from(e)}(document.querySelectorAll("[data-op]"))),r=0;r<n.length;r++){var o=n[r];o.innerHTML=t(o.dataset.op,o.dataset,e)}}function i(e,n){var r=n.target.dataset.handler;return!!r&&t(r,n.target.dataset,e,n)}var u=function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n.default=e,n}(r(1));document.dispatchEvent(new CustomEvent("locate-services",{detail:function(e,n){e?console.error(e):(document.addEventListener("click",function(e){return function(e,n){"SELECT"!==n.target.tagName&&i(e,n)&&n.preventDefault()}(n,e)}),document.addEventListener("change",function(e){return i(n,e)}),document.addEventListener("redraw",function(){return o(n)}),document.dispatchEvent(new Event("redraw")))}}))},function(e,n,r){"use strict";function t(e){return e?(0,a.ul)(!0,e.providers().filter(function(e){return e}).map(function(n){return(0,a.li)(function(e,n){var r={service:e.name,provider:n.name};return(0,a.button)("select-provider",r,n.name||"??")}(e,n))})):"???"}function o(e){return e?a.box.big((0,a.sub)(e.name+" provider"),function(e){var n=e.provider;return n?(0,a.b)(n.description+" ( "+n.name+" ) "+(0,a.button)("deselect-provider",{service:e.name}," X ")):(0,a.b)("(none)")}(e),function(e){if(e){var n=(0,a.label)("Test: ",(0,a.select)("test-service-method",{service:e.name},Array.from((0,u.userFunctions)(e)))),r=a.div.withClass("test-area");return(0,a.div)(n,r)}}(e),"Available: "+t(e)):(0,a.section)("(nothing)")}function i(e,n){var r=Object.values(e).find(function(e){return e.name===n.service});if(!r)throw new Error("Service not known: "+n.service);return r}Object.defineProperty(n,"__esModule",{value:!0}),n.invokeTestMethod=void 0;n.invokeTestMethod=function(){var e=function(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,r){function t(o,i){try{var u=n[o](i),a=u.value}catch(e){return void r(e)}if(!u.done)return Promise.resolve(a).then(function(e){t("next",e)},function(e){t("throw",e)});e(a)}return t("next")})}}(regeneratorRuntime.mark(function e(n,r,t){var o,u,a,c,s,f,l;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return o=function(e,n){var r=i(e,n);return{service:r,method:n.method?r[n.method]:void 0}}(n,r),u=o.service,a=o.method,c=Array.from(t.target.parentElement.querySelectorAll("input[type=text]")).map(function(e){return JSON.parse(e.value)}),s=t.target.parentElement.querySelector(".messages"),f=function(e){return"["+(new Date).toLocaleTimeString()+"] "+e},s&&(s.innerHTML=f("Running...<br />")),e.prev=5,e.next=8,a.apply(u,c);case 8:l=e.sent,console.log(l),s&&(s.innerHTML+=f(JSON.stringify(l))),e.next=17;break;case 13:e.prev=13,e.t0=e.catch(5),console.error(e.t0),s&&(s.innerHTML+=e.t0.stack);case 17:case"end":return e.stop()}},e,this,[[5,13]])}));return function(n,r,t){return e.apply(this,arguments)}}();n.summarizeServices=function(e){return Object.values(e).map(o).join("")},n.selectProvider=function(e,n){var r=function(e,n){var r=i(e,n),t=n.provider?r.providers().find(function(e){return e.name===n.provider}):r.provider;if(!t)throw new Error("Unknown/unspecified provider: "+n.provider);return{service:r,provider:t}}(e,n),t=r.service,o=r.provider;t.select(o),document.dispatchEvent(new Event("redraw"))},n.deselectProvider=function(e,n){i(e,n).deselect(),document.dispatchEvent(new Event("redraw"))},n.testServiceMethod=function(e,n,r){var t=i(e,n),o=r.target.value,u=r.target.parentElement.parentElement.querySelector(".test-area");u&&(u.innerHTML=function(e,n){if(!n)return"";e[n].length;var r={service:e.name,method:n};return(0,a.div)((0,a.button)("invokeTestMethod",r,"Invoke"),a.div.withClass("messages"))}(t,o))};var u=r(2),a=r(3);n.default=function(e){return e?e.replace(/-./g,function(e){return e[1].toUpperCase()}):e}},function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=function(e){return function e(n){return n&&n!==Object.prototype&&Object.getOwnPropertyNames(n).concat(e(Object.getPrototypeOf(n))||[])}(e).filter(function(n){return"function"==typeof e[n]})};n.userFunctions=function(e){return new Set(t(e).filter(function(e){return"constructor"!==e&&!~e.indexOf("__")}))}},function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=function(e){return void 0!==e},o=function(e){return Object.keys(e||{}).reduce(function(n,r){return n+" data-"+r+'="'+e[r]+'"'},"")},i=function(e){return e.filter(t).join("<br />")};n.sub=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return'<span class="sub-heading">'+i(n)+"</span>"},n.b=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return'<span class="bold">'+i(n)+"</span>"};(n.box=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return'<div class="box">'+i(n)+"</div>"}).big=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return'<div class="box big-box">'+i(n)+"</div>"};n.section=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return"<section>"+i(n)+"</section>"};(n.div=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return"<div>"+i(n)+"</div>"}).withClass=function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),t=1;t<n;t++)r[t-1]=arguments[t];return'<div class="'+e+'">'+i(r)+"</div>"};n.article=function(e,n){return"<article><header>"+e+"</header>"+n+"</article>"},n.ul=function(e,n){return'<ul class="'+(e?"inline":"")+'">'+n.join("")+"</ul>"},n.li=function(e){return"<li>"+e+"</li>"},n.label=function(e,n){return"<label>"+e+n+"</label>"},n.button=function(e,n,r){return'<button data-handler="'+e+'" '+(n?o(n):"")+">"+r+"</button>"};var u=n.option=function(e,n){return'<option value="'+e+'">'+(n||e)+"</option>"},a=n.options=function(e){return"<option></option>"+e.map(function(e){return u(e)})};n.select=function(e,n,r){return'<select data-handler="'+e+'" '+o(n)+">"+a(r)+"</select>"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,